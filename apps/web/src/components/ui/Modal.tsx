import React, { ReactNode, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { X } from 'lucide-react';\nimport { cn } from '../../utils/cn';\n\nexport interface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  children: ReactNode;\n  title?: string;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n  closeOnOverlayClick?: boolean;\n  showCloseButton?: boolean;\n}\n\nexport function Modal({\n  isOpen,\n  onClose,\n  children,\n  title,\n  size = 'md',\n  className,\n  closeOnOverlayClick = true,\n  showCloseButton = true,\n}: ModalProps) {\n  // Handle escape key\n  useEffect(() => {\n    const handleEscape = (event: KeyboardEvent) => {\n      if (event.key === 'Escape' && isOpen) {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'hidden';\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'unset';\n    };\n  }, [isOpen, onClose]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const sizeClasses = {\n    sm: 'max-w-md',\n    md: 'max-w-lg',\n    lg: 'max-w-2xl',\n    xl: 'max-w-4xl',\n  };\n\n  const handleOverlayClick = (event: React.MouseEvent) => {\n    if (event.target === event.currentTarget && closeOnOverlayClick) {\n      onClose();\n    }\n  };\n\n  const modal = (\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n      <div \n        className=\"flex min-h-full items-center justify-center p-4 text-center sm:p-0\"\n        onClick={handleOverlayClick}\n      >\n        <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n        \n        <div \n          className={cn(\n            'relative transform rounded-lg bg-white px-4 pb-4 pt-5 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:p-6',\n            sizeClasses[size],\n            className\n          )}\n        >\n          {(title || showCloseButton) && (\n            <div className=\"flex items-center justify-between mb-4\">\n              {title && (\n                <h3 className=\"text-lg font-medium leading-6 text-gray-900\">\n                  {title}\n                </h3>\n              )}\n              {showCloseButton && (\n                <button\n                  type=\"button\"\n                  className=\"rounded-md bg-white text-gray-400 hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n                  onClick={onClose}\n                >\n                  <span className=\"sr-only\">Close</span>\n                  <X className=\"h-6 w-6\" />\n                </button>\n              )}\n            </div>\n          )}\n          \n          {children}\n        </div>\n      </div>\n    </div>\n  );\n\n  return createPortal(modal, document.body);\n}"